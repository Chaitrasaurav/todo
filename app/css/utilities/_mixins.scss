// ==========================================================================
// Mixins
// ==========================================================================

// BEM selectors

@mixin e($element) {
	&_#{$element} {
    @content;
  }
}
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}


// Image replacement

@mixin img-replace($img, $w, $h, $disp: block) {
	background-image: url('#{$path--img}#{$img}');
	background-repeat: no-repeat;
	width: $w;
	height: $h;
	display: $disp;
}


/* Breakpoints*/


@mixin responsive--lg {
  @media only screen and (max-width: em($responsive--lg)) {
    @content;
  }
}

@mixin responsive--md {
  @media only screen and (max-width: em($responsive--md)) {
    @content;
  }
}

@mixin responsive--sm {
  @media only screen and (max-width: em($responsive--sm)) {
    @content;
  }
}

@mixin responsive--xs {
  @media only screen and (max-width: em($responsive--xs)) {
    @content;
  }
}




/* Buttons*/

@mixin buttons($button_background--color, $button_border--color, $button_text--color, $button_border--radius, $button_padding) {
  background-color: $button_background--color;
  border:1px solid $button_border--color;
  border-radius: $button_border--radius;
  color: $button_text--color;
  padding: $button_padding;
}

/* Font face*/

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
    eot: "?",
    svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

/* Animations and keyframes */

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }  
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }  
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

/* Transitions */

@mixin transition($args) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

/* Cross browser opacity */

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}